spring.application.name=MainProject

# MySQL DataSource Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/main_project?rewriteBatchedStatements=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=tiger

# HikariCP Connection Pool (실전 튜닝)
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.auto-commit=true

# JPA Setting (JPA는 마스터 테이블만, 배치 단위/정렬 insert)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=2000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Logging (필요하면 DEBUG를 켜서 SQL 바인딩까지 확인)
logging.level.org.hibernate.SQL=info
logging.level.org.hibernate.orm.jdbc.bind=info
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=warn
logging.level.org.springframework.security=DEBUG
logging.level.org.springdoc=info
logging.level.org.springframework.web=info

# Multipart (업로드 용량 제한)
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# 톰캣 업로드 버퍼 (대용량 업로드시)
server.tomcat.max-http-post-size=210000000

# 서버가 응답까지 기다리는 최대 시간 (예: 10초)
server.servlet.session.timeout=10s

# (Spring 2.6 이상) HTTP read timeout (예: 10초)
server.tomcat.connection-timeout=10s
